name: CI/CD Pipeline for Lab3

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies - Lab 3
      run: dotnet restore lab3files/Lab3.sln
      
    - name: Restore dependencies - Lab 4
      run: dotnet restore lab4files/Lab4.sln
      
    - name: Build solution - Lab 3
      run: dotnet build lab3files/Lab3.sln --configuration Release --no-restore
      
    - name: Build solution - Lab 4
      run: dotnet build lab4files/Lab4.sln --configuration Release --no-restore
      
    - name: Run Lab 3 SpecFlow tests
      run: dotnet test lab3files/Lab3.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger "trx;LogFileName=lab3-test-results.trx" --results-directory ./TestResults
      
    - name: Run Lab 4 Unit tests with Mocking
      run: dotnet test lab4files/Lab4.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger "trx;LogFileName=lab4-test-results.trx" --results-directory ./TestResults
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: '**/TestResults/*.trx'
        reporter: dotnet-trx
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./**/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install SonarCloud scanner
      run: dotnet tool install --global dotnet-sonarscanner
      
    - name: Run SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin /k:"lab3-calculator" /o:"your-org" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build lab3files/Lab3.sln --configuration Release
        dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan, code-quality]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Publish application
      run: dotnet publish lab3files/Lab3/Lab3.csproj --configuration Release --output ./publish
      
    - name: Deploy to staging
      run: echo "Deploying to staging environment..."
      # Add your deployment commands here
      
    - name: Run integration tests
      run: echo "Running integration tests..."
      # Add integration test commands here
      
    - name: Deploy to production
      if: success()
      run: echo "Deploying to production environment..."
      # Add production deployment commands here
